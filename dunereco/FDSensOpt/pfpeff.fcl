#include "services_dune.fcl"

process_name: Mergeana

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "ana_hist.root" }
  TimeTracker:       {}
  RandomNumberGenerator: {}
  MemoryTracker:         { } # default is one
  message:      @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::dunefd_simulation_services
}
#services.PhotonVisibilityService:      @local::dune35t_photonvisibilityservice
#source is now a root file
services.AuxDetGeometry: @local::dune10kt_1x2x6_auxdet_geo
services.Geometry: @local::dune10kt_1x2x6_geo
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 analyzers:{}
 #define the output stream, there could be more than one if using filters 
# stream1:  [ ]

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 ana:  [ pfpeff ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ana]  
# end_paths:     [stream1]  
}

physics.analyzers.pfpeff:  {
    module_type:          "PFPEfficiency"
    MCTruthModuleLabel:   "generator"
    PFPModuleLabel:       "pandora"
    HitModuleLabel:       "linecluster"
    FidVolCutX:           10
    FidVolCutY:           10
    FidVolCutZ:           10
}
