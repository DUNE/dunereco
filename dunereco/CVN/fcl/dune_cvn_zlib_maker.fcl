#include "services_dune.fcl"
#include "energyreco.fcl"
#include "CVNMapper.fcl"
#include "CVNZlibMaker.fcl"

process_name: ZlibMaker

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "potinfo_r%r-r%R_s%s-s%S_hist.root" }
  TimeTracker:       {}
  RandomNumberGenerator: {}
  MemoryTracker:         { } # default is one
  message:      @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::dunefd_simulation_services
AuxDetGeometry: @local::dune10kt_workspace_auxdet_geo
  Geometry:             @local::dune10kt_workspace_geo
}

source:
{
  module_type: RootInput
  maxEvents: -1
}

physics:
{
  producers:
  {
    energynue:   @local::dunefd_nuenergyreco_pmtrack
    energynumu:  @local::dunefd_nuenergyreco_pmtrack
    energynutau: @local::dunefd_nuenergyreco_pmtrack
    cvnmap:      @local::standard_cvnmapper
  }
  analyzers:
  {
    zlib:        @local::standard_cvnzlibmaker
  }

  map:           [ energynue, energynumu, energynutau, cvnmap ]
  ana:           [ zlib ]
  end_paths:     [ ana ]  
}

# Use calorimetric energy reconstruction
physics.producers.energynue.RecoMethod: 1
physics.producers.energynumu.RecoMethod: 2
physics.producers.energynutau.RecoMethod: 3

# CVNMapper configuration
physics.producers.cvnmap.HitsModuleLabel: "hitfd"
physics.producers.cvnmap.TimeResolution: 1600
physics.producers.cvnmap.WireLength: 2880
physics.producers.cvnmap.TdcWidth: 500
